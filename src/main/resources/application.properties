# 개발환경 profile
#   local:로컬, dev:개발서버, qa:QA, stg:상용스테이징, real:상용
spring.profiles.active = local

# Initialize a database using Spring JDBC (ddl-auto = none일때 적용됨, 적용되면 import.sql안먹음)
# 위치를 지정하고 싶을 경우 사용
spring.datasource.schema = classpath:/schema.sql 
spring.datasource.data = classpath:/data.sql
spring.datasource.initialize = true

# Port 설정
#server.port=80

# JSP 설정 (TO BaseApplication)
#spring.mvc.view.prefix: /WEB-INF/jsp/
#spring.mvc.view.suffix: .jsp

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
spring.jpa.database = mysql
# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project

spring.jpa.generate-ddl = true
spring.jpa.hibernate.ddl-auto = none
#spring.jpa.hibernate.ddl-auto = create
#spring.jpa.properties.hibernate.dynamic-update = false

# Naming strategy
spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
